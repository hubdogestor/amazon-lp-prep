// ownership_case8.js
// FASE: Bradesco Next (Q2 2018)
// CONTEXTO: Erro de estimativa que atrasou lançamento - ownership assumido publicamente
// SCORE ALVO: 85-90 (Q7 - responsabilidade por erros)

export default {
  id: 'bradesco-next-delay',
  title: 'Erro de Estimativa no Lançamento Bradesco Next',
  title_pt: 'Erro de Estimativa no Lançamento Bradesco Next',
  title_en: 'Estimation Error in Bradesco Next Launch',
  company: 'Bradesco',
  period: 'Q2 2018',
  isTopCase: false,
  pt: {
    s: `“Leonardo, você garantiu que abril era viável. O CEO já fez um press release. Onde você errou?” A confrontação do CTO em uma chamada executiva foi direta, e o momento da verdade chegou. Três semanas antes do congelamento de código, meu time reportou 60% de conclusão quando eu havia comunicado 85% ao conselho. **As apostas eram brutais**: um prazo público de 28 de abril para o lançamento do Bradesco Next, um banco 100% digital, já anunciado na imprensa; um mercado dominado pelo Nubank (NPS 92); e minha estimativa otimista que subestimou a complexidade da API da Serasa (TLS mútuo + retries assíncronos). Este era o momento da verdade: assumir o erro publicamente perante o conselho ou transferir a culpa e destruir a confiança para sempre. A verdadeira ownership se manifesta quando você admite “o erro foi meu” sem justificativas — especialmente diante do CEO.`,
    t: `Diante de um erro de estimativa que ameaçava um lançamento de alto risco, minha tarefa era assumir publicamente a responsabilidade, realinhar as expectativas com o C-level e entregar uma solução que não apenas corrigisse o curso, mas também fortalecesse a organização. Eu precisava transformar uma falha individual em uma capacidade organizacional duradoura.`,
    a: `Primeiro, agi com transparência radical. Em menos de 24 horas, enviei um e-mail ao CEO, CTO e ao conselho, com meu time em cópia, declarando: “Eu subestimei a complexidade da integração da Serasa. O erro foi meu. A nova data é 19 de maio.” Em seguida, conduzi um post-mortem de 5 porquês em 48 horas, que revelou a causa raiz: a ausência de um framework de estimativa para integrações regulatórias. Com base nisso, apresentei um plano de recuperação: realoquei 8 FTEs de features não críticas, contratei 2 consultores especializados em Serasa (R$ 180k/mês) e implementei testes de carga em paralelo, comprimindo o cronograma em 3 semanas. Finalmente, para garantir que o erro não se repetisse, criei e documentei um novo framework de estimativa, incluindo um buffer de 40% para APIs de terceiros e uma política de escalonamento clara. Treinei 4 engenheiros principais neste novo modelo.`,
    r: `O resultado foi uma demonstração clara de que assumir os erros constrói confiança. Entregamos o Bradesco Next na data revisada, 19 de maio, com o motor de crédito suportando um pico de 73k requisições/hora e aprovando 12.847 contas em 72 horas com zero incidentes. Atingimos um tempo médio de aprovação de 3m47s, superando nossa meta de <5min e alcançando um NPS de 89, próximo ao líder de mercado. Mais importante, o framework de estimativa que criei foi adotado em toda a empresa, reduzindo o erro médio de estimativa de ±42% para ±11% nos 5 projetos seguintes e prevenindo 3 atrasos críticos. Quatro meses depois, fui promovido a Principal Engineer, com o CTO citando meu “ownership exemplar”.`,
    l: `Essa experiência cristalizou minha filosofia sobre ownership: ela se prova não na celebração do sucesso, mas na forma como lidamos com o fracasso. Aprendi que admitir “o erro foi meu” de forma rápida e pública é o alicerce da confiança. Desde então, meu método é: escalar riscos cedo é ownership, esconder é ego; post-mortems sem culpa geram aprendizado, defesa gera repetição; e um mecanismo duradouro é a única prova de que a lição foi aprendida. Este incidente não foi apenas sobre corrigir um erro, mas sobre transformar uma falha em um ativo estratégico para a organização.`
  },
  en: {
    s: `"Leonardo, you guaranteed April was feasible. The CEO already issued a press release. Where did you go wrong?" The CTO's confrontation on an executive call was direct, and the moment of truth arrived. Three weeks before the code freeze, my team reported 60% completion when I had communicated 85% to the board. **The stakes were brutal**: a public deadline of April 28th for the launch of Bradesco Next, a 100% digital bank, already announced in the press; a market dominated by Nubank (NPS 92); and my optimistic estimate that underestimated the complexity of the Serasa API (mutual TLS + asynchronous retries). This was the moment of truth: own the mistake publicly before the board or shift the blame and destroy trust forever. True ownership manifests when you admit "the mistake was mine" without excuses—especially in front of the CEO.`,
    t: `Faced with an estimation error that threatened a high-stakes launch, my task was to publicly take responsibility, realign expectations with the C-level, and deliver a solution that not only corrected the course but also strengthened the organization. I needed to turn an individual failure into a lasting organizational capability.`,
    a: `First, I acted with radical transparency. Within 24 hours, I sent an email to the CEO, CTO, and the board, with my team copied, stating: "I underestimated the complexity of the Serasa integration. The mistake was mine. The new date is May 19th." Next, I conducted a 5-whys post-mortem within 48 hours, which revealed the root cause: the absence of an estimation framework for regulatory integrations. Based on this, I presented a recovery plan: I reallocated 8 FTEs from non-critical features, hired 2 specialized Serasa consultants (R$180k/month), and implemented parallel load testing, compressing the schedule by 3 weeks. Finally, to ensure the mistake would not be repeated, I created and documented a new estimation framework, including a 40% buffer for third-party APIs and a clear escalation policy. I trained 4 principal engineers on this new model.`,
    r: `The result was a clear demonstration that owning mistakes builds trust. We delivered Bradesco Next on the revised date, May 19th, with the credit engine supporting a peak of 73k requests/hour and approving 12,847 accounts in 72 hours with zero incidents. We achieved an average approval time of 3m47s, beating our goal of <5min and reaching an NPS of 89, close to the market leader. More importantly, the estimation framework I created was adopted company-wide, reducing the average estimation error from ±42% to ±11% in the following 5 projects and preventing 3 critical delays. Four months later, I was promoted to Principal Engineer, with the CTO citing my "exemplary ownership."`,
    l: `This experience crystallized my philosophy on ownership: it is proven not in the celebration of success, but in how we handle failure. I learned that admitting "the mistake was mine" quickly and publicly is the bedrock of trust. Since then, my method has been: escalating risks early is ownership, hiding is ego; blameless post-mortems generate learning, defensiveness generates repetition; and a lasting mechanism is the only proof that the lesson was learned. This incident was not just about fixing a mistake, but about turning a failure into a strategic asset for the organization.`
  },
  fups: [
    {
      q: "Como você soube que havia subestimado a complexidade?",
      a: "Na sprint review de 12 de março, três semanas antes do code freeze, meu tech lead reportou que a integração Serasa estava 60% completa quando eu havia comunicado ao board 85% e garantido que abril era viável. O gap entre meu tracking (baseado em story points concluídos) e a realidade técnica (autenticação TLS + retries assíncronos ainda não resolvidos) ficou evidente quando testamos carga de 50k req/h e o sistema falhou em 73% das requisições. Eu percebi que confiei em estimativa otimista sem validar complexidade regulatória com POC técnico.",
      q_en: "How did you know you had underestimated complexity?",
      a_en: "At the March 12th sprint review, three weeks before code freeze, my tech lead reported Serasa integration was 60% complete when I had communicated 85% to the board and guaranteed April was viable. The gap between my tracking (based on completed story points) and technical reality (TLS authentication + async retries still unresolved) became evident when we tested 50k req/h load and the system failed 73% of requests. I realized I relied on optimistic estimate without validating regulatory complexity with technical POC."
    },
    {
      q: "Como o CEO e o CTO reagiram quando você assumiu o erro?",
      a: "O CTO me confrontou duramente na call executiva: 'Leonardo, você garantiu que abril era viável. O CEO já fez press release. Onde você errou?'. Quando assumi imediatamente 'o erro foi meu: subestimei Serasa e não incluí buffer regulatório', a tensão diminuiu. O CEO respondeu: 'Eu aprecio a honestidade. Qual é o novo target realista?'. Apresentei plano de correção (8 FTEs realocados, 2 consultores Serasa, testes paralelos) e novo target 19 de maio com margem de segurança. O CEO aceitou e disse: 'Eu confio que você vai entregar'. A transparência imediata transformou confronto em colaboração.",
      q_en: "How did the CEO and CTO react when you owned the error?",
      a_en: "The CTO confronted me hard on the executive call: 'Leonardo, you guaranteed April was viable. The CEO already issued a press release. Where did you go wrong?'. When I immediately owned 'the error was mine: I underestimated Serasa and didn't include regulatory buffer', tension decreased. The CEO responded: 'I appreciate the honesty. What's the realistic new target?'. I presented correction plan (8 FTEs reallocated, 2 Serasa consultants, parallel tests) and new target May 19th with safety margin. The CEO accepted and said: 'I trust you'll deliver'. Immediate transparency turned confrontation into collaboration."
    },
    {
      q: "Como você protegeu seu time durante a crise?",
      a: "Eu deixei claro em email ao CEO e board (cópia para meu time) que 'o erro foi meu na estimativa, não do time na execução'. Em retrospectiva interna eu reafirmei: 'Vocês executaram perfeitamente o que foi pedido. Eu que subestimei a complexidade Serasa e não escalei risco cedo'. Quando o CTO sugeriu 'revisar capacidade do tech lead', eu respondi: 'O tech lead me alertou sobre TLS em sprint 2. Eu que assumi que resolveria sem atrasar. A falha é minha'. Proteger o time de blame injusto é parte essencial de ownership.",
      q_en: "How did you protect your team during the crisis?",
      a_en: "I made it clear in email to CEO and board (copying my team) that 'the error was mine in estimation, not the team's in execution'. In internal retrospective I reaffirmed: 'You executed perfectly what was asked. I underestimated Serasa complexity and didn't escalate risk early'. When the CTO suggested 'reviewing tech lead capacity', I responded: 'The tech lead warned me about TLS in sprint 2. I assumed I'd solve it without delay. The failure is mine'. Protecting the team from unfair blame is an essential part of ownership."
    },
    {
      q: "Qual foi o root cause do erro de estimativa?",
      a: "Eu rodei 5-why analysis no post-mortem: (1) Por que errei? Confiei em doc Serasa incompleta; (2) Por que doc incompleta? Serasa não publicou requisitos TLS até sprint 3; (3) Por que não escalei antes? Assumi que resolveria sem atrasar; (4) Por que assumi? Viés de otimismo em estimativas históricas (meus últimos 3 projetos entregaram on-time, criei overconfidence); (5) Root cause: Falta de framework para integrações regulatórias críticas. Eu não tinha checklist para APIs de terceiros (POC obrigatório, buffer 40%, escalation policy). O erro foi sistêmico, não pontual.",
      q_en: "What was the root cause of the estimation error?",
      a_en: "I ran 5-why analysis in post-mortem: (1) Why did I err? Relied on incomplete Serasa docs; (2) Why incomplete docs? Serasa didn't publish TLS requirements until sprint 3; (3) Why didn't I escalate earlier? Assumed I'd solve without delay; (4) Why assume? Optimism bias in historical estimates (my last 3 projects delivered on-time, created overconfidence); (5) Root cause: Lack of framework for critical regulatory integrations. I had no checklist for third-party APIs (mandatory POC, 40% buffer, escalation policy). The error was systemic, not one-off."
    },
    {
      q: "Como você comprimiu o cronograma de 11 para 8 semanas?",
      a: "Eu realoguei 8 FTEs do squad de gamificação (feature adiada para v1.1) para motor de crédito, aumentando capacidade em 60%. Contratei 2 especialistas Serasa como consultores externos (R$180k/mês) para resolver autenticação TLS em 5 dias vs. 3 semanas. Rodei testes de carga em paralelo ao desenvolvimento (CI/CD com 50k req/h simulados) ao invés de sequencial, economizando 2 semanas. Mantive daily standup com CTO para desbloquear impedimentos em <4h. Assumi disponibilidade 24/7 para code review e decisões críticas. A combinação de mais recursos + paralelização + desbloqueio rápido comprimiu 11 para 8 semanas.",
      q_en: "How did you compress timeline from 11 to 8 weeks?",
      a_en: "I reallocated 8 FTEs from gamification squad (feature deferred to v1.1) to credit engine, increasing capacity by 60%. I hired 2 Serasa specialists as external consultants (R$180k/month) to resolve TLS authentication in 5 days vs. 3 weeks. I ran load tests parallel to development (CI/CD with 50k req/h simulated) instead of sequential, saving 2 weeks. I held daily standup with CTO to unblock impediments in <4h. I assumed 24/7 availability for code review and critical decisions. The combination of more resources + parallelization + fast unblocking compressed 11 to 8 weeks."
    },
    {
      q: "Qual foi o framework de estimativa que você criou?",
      a: "Eu criei checklist de 3 camadas para integrações regulatórias: (1) Antes de commitar deadline: Rodar POC técnico obrigatório para APIs críticas de terceiros (mínimo 2 sprints), adicionar buffer de 40% para integrações regulatórias vs. 20% para integrações internas, validar SLA do fornecedor (ex: Serasa response time <2s em 95% dos casos); (2) Durante execução: Escalation policy automática: se realizado < 70% do estimado em 50% do tempo, escalar ao CTO imediatamente, daily tracking de blockers externos (API docs, ambiente sandbox, suporte fornecedor); (3) Post-mortem: Documentar delta estimativa vs. realidade, atualizar buffer histórico por tipo de integração. Esse framework reduziu erro de ±42% para ±11% em 5 projetos.",
      q_en: "What was the estimation framework you created?",
      a_en: "I created 3-layer checklist for regulatory integrations: (1) Before committing deadline: Run mandatory technical POC for critical third-party APIs (minimum 2 sprints), add 40% buffer for regulatory integrations vs. 20% for internal integrations, validate vendor SLA (e.g. Serasa response time <2s in 95% of cases); (2) During execution: Automatic escalation policy: if realized < 70% of estimate at 50% time elapsed, escalate to CTO immediately, daily tracking of external blockers (API docs, sandbox environment, vendor support); (3) Post-mortem: Document delta estimate vs. reality, update historical buffer by integration type. This framework reduced error from ±42% to ±11% across 5 projects."
    },
    {
      q: "Como você garantiu que o time não perdesse motivação após o erro?",
      a: "Eu transformei o erro em oportunidade de aprendizado coletivo. Na retrospectiva interna eu disse: 'Nós erramos juntos, vamos aprender juntos'. Rodei sessão de 2h de post-mortem blameless onde cada membro contribuiu com 1 lição aprendida (23 lições no total). Reconheci publicamente 3 engineers que detectaram riscos cedo mas eu não escalei. Quando entreguei em 19 de maio, celebrei com churrasco de time e destaquei contribuições individuais em email ao CEO. O CTO me promoveu 4 meses depois e eu recomendei aumento de 15% para tech lead que me alertou sobre TLS. Transformar erro em crescimento mantém motivação alta.",
      q_en: "How did you ensure the team didn't lose motivation after the error?",
      a_en: "I transformed error into collective learning opportunity. In internal retrospective I said: 'We erred together, we'll learn together'. I ran 2h blameless post-mortem where each member contributed 1 lesson learned (23 lessons total). I publicly recognized 3 engineers who detected risks early but I didn't escalate. When I delivered on May 19th, I celebrated with team barbecue and highlighted individual contributions in email to CEO. The CTO promoted me 4 months later and I recommended 15% raise for tech lead who warned me about TLS. Transforming error into growth keeps motivation high."
    },
    {
      q: "Como o framework preveniu erros em projetos futuros?",
      a: "O framework foi adotado como padrão Bradesco e reduziu erro de estimativa de ±42% para ±11% em 5 projetos regulatórios subsequentes: (1) LGPD Consent Manager: POC detectou gap de performance em API de consentimento, adicionei 3 sprints vs. entregar atrasado; (2) PIX Phase 2: Escalation policy acionou em sprint 4 quando BCB atrasou homologação sandbox, renegociei deadline com 2 semanas antecedência; (3) Open Finance: Buffer de 40% absorveu 6 mudanças de spec do BCB sem atrasar; (4) Drex Pilot: POC revelou que blockchain consortium exigia infra on-premise (vs. cloud assumido), evitou retrabalho de 8 semanas. O runbook foi replicado em 8 squads e preveniu 3 atrasos críticos.",
      q_en: "How did the framework prevent errors in future projects?",
      a_en: "The framework was adopted as Bradesco standard and reduced estimation error from ±42% to ±11% across 5 subsequent regulatory projects: (1) LGPD Consent Manager: POC detected performance gap in consent API, I added 3 sprints vs. delivering late; (2) PIX Phase 2: Escalation policy triggered in sprint 4 when BCB delayed sandbox approval, I renegotiated deadline 2 weeks in advance; (3) Open Finance: 40% buffer absorbed 6 BCB spec changes without delay; (4) Drex Pilot: POC revealed blockchain consortium required on-premise infra (vs. assumed cloud), avoided 8 weeks rework. The runbook was replicated across 8 squads and prevented 3 critical delays."
    },
    {
      q: "Qual foi a reação do mercado ao atraso do lançamento?",
      a: "O CEO havia anunciado lançamento em abril em press release para Exame e Valor Econômico. Quando adiamos para maio, a assessoria de imprensa emitiu nota: 'Bradesco Next será lançado em 19 de maio para garantir experiência perfeita aos clientes'. Dois concorrentes (Nubank e Inter) aproveitaram para fazer campanha comparativa ('Nós não atrasamos'), mas quando lançamos sem incidentes críticos e aprovamos 12.847 contas em 72h (vs. Nubank que teve instabilidade na Black Friday 2017), a narrativa virou: 'Bradesco preferiu qualidade a pressa'. O NPS de 89 na primeira semana validou a decisão. Assumir erro e entregar resultado silencia críticos.",
      q_en: "What was the market reaction to the launch delay?",
      a_en: "The CEO had announced April launch in press release to Exame and Valor Econômico. When we postponed to May, press office issued note: 'Bradesco Next will launch May 19th to guarantee perfect client experience'. Two competitors (Nubank and Inter) leveraged it for comparative campaigns ('We don't delay'), but when we launched with 0 critical incidents and approved 12,847 accounts in 72h (vs. Nubank which had instability in Black Friday 2017), narrative shifted: 'Bradesco chose quality over rush'. NPS of 89 in first week validated decision. Owning error and delivering results silences critics."
    },
    {
      q: "Como essa experiência mudou seu approach a estimativas?",
      a: "Eu nunca mais commitei deadline público sem POC técnico para integrações críticas de terceiros. Meu checklist pessoal: (1) Se integração é regulatória ou envolve API de terceiro sem SLA garantido, buffer mínimo 40%; (2) Se não rodei POC, não commito data; (3) Escalation policy não-negociável: <70% realizado em 50% do tempo = escalar ao CTO mesmo que eu ache que vou resolver; (4) Post-mortem obrigatório em todo projeto, documentar delta estimativa vs. realidade. Esse rigor me rendeu reputação de 'entrega o que promete': 11 projetos subsequentes entregues on-time ou early, incluindo PIX (3 dias early) e Open Finance (1 semana early). Assumir erro me tornou estimador mais confiável.",
      q_en: "How did this experience change your approach to estimates?",
      a_en: "I never again committed public deadline without technical POC for critical third-party integrations. My personal checklist: (1) If integration is regulatory or involves third-party API without guaranteed SLA, minimum 40% buffer; (2) If I didn't run POC, I don't commit date; (3) Non-negotiable escalation policy: <70% realized at 50% time = escalate to CTO even if I think I'll solve it; (4) Mandatory post-mortem on every project, document delta estimate vs. reality. This rigor earned me reputation of 'delivers what he promises': 11 subsequent projects delivered on-time or early, including PIX (3 days early) and Open Finance (1 week early). Owning error made me more reliable estimator."
    }
  ]
};
